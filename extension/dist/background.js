const a={BASE_URL:"https://magic-button-api-374140035541.europe-west1.run.app",ENDPOINTS:{HEALTH:"/health",PROCESS:"/api/genai/process",DEMO_STATUS:"/demo/status",RAG_DOCUMENTS:"/rag/documents",RAG_SEARCH:"/rag/search",RAG_GENERATE:"/rag/generate"},DEFAULT_HEADERS:{"Content-Type":"application/json"},TIMEOUT:3e4};console.log("Magic Button background script loaded");console.log("üöÄ API Configuration:",a.BASE_URL);chrome.runtime.onInstalled.addListener(o=>{console.log("Magic Button extension installed:",o.reason),o.reason==="install"&&chrome.storage.local.set({installDate:new Date().toISOString(),version:chrome.runtime.getManifest().version})});chrome.runtime.onMessage.addListener((o,n,e)=>{var r;switch(console.log("Background received message:",o),o.type){case"GET_SELECTED_TEXT":return l((r=n.tab)==null?void 0:r.id,e),!0;case"PROCESS_AI_REQUEST":case"PROCESS_TEXT":return E(o,e),!0;case"OPEN_POPUP":return console.log("Popup open request:",o),e({success:!0}),!1;default:console.warn("Unknown message type:",o.type)}});async function l(o,n){var e;try{if(!o){n({error:"No active tab found"});return}const c=((e=(await chrome.scripting.executeScript({target:{tabId:o},func:()=>{var t;return((t=window.getSelection())==null?void 0:t.toString())||""}}))[0])==null?void 0:e.result)||"";n({selectedText:c})}catch(r){console.error("Error getting selected text:",r),n({error:r instanceof Error?r.message:"Unknown error"})}}const u=a.BASE_URL;async function E(o,n){try{const e=o.data||o,r=`${u}/api/genai/process`;console.log("üöÄ VERTEX AI - Making API request to:",r),console.log("Request data:",e),console.log("API_BASE_URL from config:",a.BASE_URL);const c={action:e.action,text:e.text,options:e.options||{}};console.log("Request body:",JSON.stringify(c,null,2));const t=await fetch(r,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(c)});if(console.log("Response status:",t.status,t.statusText),console.log("Response headers:",Object.fromEntries(t.headers.entries())),!t.ok){const i=await t.text();throw console.error("API Error Response:",i),new Error(`API Error: ${t.status} ${t.statusText} - ${i}`)}const s=await t.json();console.log("‚úÖ API Response success:",s),n({success:!0,result:s.result||s.text||s,action:e.action,processingTime:s.processingTime})}catch(e){console.error("‚ùå Error processing AI request:",e),console.error("Error details:",{name:e instanceof Error?e.name:"Unknown",message:e instanceof Error?e.message:"Unknown error",stack:e instanceof Error?e.stack:void 0}),n({success:!1,error:e instanceof Error?e.message:"Unknown error",action:(o.data||o).action})}}
